
/**
 * Main export file for cryptographic data extraction utilities
 */

import { checkBitcoinLibsLoaded } from '@/lib/crypto/bitcoin-libs';
import { extractP2PKHData } from './p2pkh';
import { extractSegWitData } from './segwit';
import { extractHexData } from './hexUtils';

/**
 * Extract cryptographic data (public key and signature) from transaction
 * @param txData Transaction data from blockchain API
 * @returns Object containing public key and signature if found, or null if not found
 */
export const extractCryptographicData = (txData: any) => {
  // Try P2PKH extraction first
  const p2pkhData = extractP2PKHData(txData);
  if (p2pkhData) {
    return p2pkhData;
  }
  
  // Try SegWit extraction next
  const segwitData = extractSegWitData(txData);
  if (segwitData) {
    return segwitData;
  }
  
  // Try raw hex extraction as a last resort
  const hexData = extractHexData(txData);
  if (hexData) {
    return hexData;
  }
  
  // Could not extract data from any known format
  return null;
};

/**
 * Check if required Bitcoin libraries are loaded for extraction functions
 * @returns Boolean indicating if all required libraries are available
 */
export const checkExtractionLibraries = (): boolean => {
  const libsCheck = checkBitcoinLibsLoaded();
  if (!libsCheck.loaded) {
    console.error(`Bitcoin libraries required for extraction not loaded: Missing ${libsCheck.missing.join(', ')}`);
    return false;
  }
  return true;
};

// Re-export extraction utilities
export { extractP2PKHData } from './p2pkh';
export { extractSegWitData } from './segwit';
export { extractHexData } from './hexUtils';
