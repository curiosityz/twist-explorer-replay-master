
import { parseWitnessData } from './utils/parseWitness';
import { extractWitnessPublicKey } from './utils/publicKeyExtraction';
import { extractWitnessSignature } from './utils/signatureExtraction';
import { PublicKey } from '@/types/publicKey';

/**
 * Extract cryptographic data from SegWit transactions
 * @param witnessData Witness data array from transaction
 * @returns Object containing public key and signature data, or null if unsuccessful
 */
export const extractSegWitData = (witnessData: any) => {
  try {
    console.log("Starting SegWit data extraction from witness data");
    
    // Input validation for witness data
    if (!witnessData || !Array.isArray(witnessData) || witnessData.length === 0) {
      console.error("Invalid witness data structure for SegWit extraction");
      return null;
    }
    
    // Log witness data structure to help with debugging
    console.log("Witness data structure:", witnessData.length, "items");
    
    // Parse the witness data
    const parsedWitness = parseWitnessData(witnessData);
    
    if (parsedWitness) {
      // Try to extract public key
      const publicKey = extractWitnessPublicKey(
        parsedWitness.pubKeyHex ? 
          new Uint8Array(Buffer.from(parsedWitness.pubKeyHex, 'hex')) :
          new Uint8Array()
      );
      
      // Try to extract signature 
      const signature = extractWitnessSignature(
        parsedWitness.sigHex ?
          new Uint8Array(Buffer.from(parsedWitness.sigHex, 'hex')) :
          new Uint8Array()
      );
      
      if (publicKey && signature) {
        console.log("Successfully extracted SegWit cryptographic data:", {
          publicKeyX: publicKey.x.substring(0, 10) + "...",
          publicKeyY: publicKey.y.substring(0, 10) + "..."
        });
        
        return {
          publicKey: publicKey as PublicKey,
          signature: signature
        };
      }
    }
    
    // If we get here, we couldn't extract the data successfully
    console.error("Failed to extract cryptographic data from witness data");
    return null;
  } catch (error) {
    console.error("Error extracting SegWit data:", error);
    return null;
  }
};
